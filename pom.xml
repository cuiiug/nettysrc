<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ Copyright 2012 The Netty Project ~ ~ The Netty Project licenses this file to you under the Apache License, ~ version 2.0 (the "License"); you may not use this file except in compliance ~ with the License. You may obtain a copy of the License at: ~ ~ http://www.apache.org/licenses/LICENSE-2.0 ~ ~ Unless required by applicable law or agreed to in writing, software ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the ~ License for the specific language governing permissions 
	and limitations ~ under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>9</version>
	</parent>
	<groupId>cn.hui</groupId>
	<artifactId>nettysrc</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Netty</name>

	<properties>
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
		<netty.dev.tools.directory>${project.build.directory}/dev-tools</netty.dev.tools.directory>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<netty.build.version>22</netty.build.version>
		<jboss.marshalling.version>1.4.11.Final</jboss.marshalling.version>
		<jetty.alpnAgent.version>2.0.6</jetty.alpnAgent.version>
		<jetty.alpnAgent.path>"${settings.localRepository}"/org/mortbay/jetty/alpn/jetty-alpn-agent/${jetty.alpnAgent.version}/jetty-alpn-agent-${jetty.alpnAgent.version}.jar</jetty.alpnAgent.path>
		<argLine.common>
			-server
			-dsa -da -ea:io.netty...
			-XX:+AggressiveOpts
			-XX:+TieredCompilation
			-XX:+UseBiasedLocking
			-XX:+UseFastAccessorMethods
			-XX:+OptimizeStringConcat
			-XX:+HeapDumpOnOutOfMemoryError
		</argLine.common>
		<!-- Default to ALPN. See forcenpn profile to force NPN -->
		<argLine.alpnAgent>-javaagent:${jetty.alpnAgent.path}=${jetty.alpnAgent.option}</argLine.alpnAgent>
		<argLine.leak>-D_</argLine.leak> <!-- Overridden when 'leak' profile is active -->
		<argLine.noUnsafe>-D_</argLine.noUnsafe> <!-- Overridden when 'noUnsafe' profile is active -->
		<argLine.coverage>-D_</argLine.coverage> <!-- Overridden when 'coverage' profile is active -->
		<argLine.java9 /> <!-- Overridden when 'java9' profile is active -->
		<argLine.javaProperties>-D_</argLine.javaProperties>
		<!-- Configure the os-maven-plugin extension to expand the classifier on -->
		<!-- Fedora-"like" systems. This is currently only used for the netty-tcnative dependency -->
		<os.detection.classifierWithLikes>fedora</os.detection.classifierWithLikes>
		<tcnative.artifactId>netty-tcnative</tcnative.artifactId>
		<tcnative.version>2.0.7.Final</tcnative.version>
		<tcnative.classifier>${os.detected.classifier}</tcnative.classifier>
		<conscrypt.groupId>org.conscrypt</conscrypt.groupId>
		<conscrypt.artifactId>conscrypt-openjdk-uber</conscrypt.artifactId>
		<conscrypt.version>1.0.0.RC13</conscrypt.version>
		<conscrypt.classifier />
		<epoll.classifier>${os.detected.name}-${os.detected.arch}</epoll.classifier>
		<logging.config>${project.basedir}/../common/src/test/resources/logback-test.xml</logging.config>
		<logging.logLevel>debug</logging.logLevel>
		<log4j2.version>2.6.2</log4j2.version>
		<enforcer.plugin.version>1.4.1</enforcer.plugin.version>
		<testJavaHome>${env.JAVA_HOME}</testJavaHome>
		<skipOsgiTestsuite>false</skipOsgiTestsuite>
		<skipAutobahnTestsuite>false</skipAutobahnTestsuite>
	</properties>
	<dependencies>


		<!-- Byte code generator - completely optional -->
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.19.0-GA</version>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>

		<!-- JBoss Marshalling - completely optional -->
		<dependency>
			<groupId>org.jboss.marshalling</groupId>
			<artifactId>jboss-marshalling</artifactId>
			<version>${jboss.marshalling.version}</version>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>

		<!-- SPDY and HTTP/2 - completely optional -->
		<dependency>
			<groupId>org.eclipse.jetty.npn</groupId>
			<artifactId>npn-api</artifactId>
			<version>1.1.1.v20141010</version>
			<scope>provided</scope> <!-- Provided by npn-boot -->
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.alpn</groupId>
			<artifactId>alpn-api</artifactId>
			<version>1.1.2.v20150522</version>
			<scope>provided</scope> <!-- Provided by alpn-boot -->
		</dependency>

		<!-- Google Protocol Buffers - completely optional -->
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>2.5.0</version>
		</dependency>
		<!-- Bouncy Castle - completely optional, only needed when: - you generate a temporary self-signed certificate using SelfSignedCertificate, and - you don't use the JDK which doesn't provide sun.security.x509 package. -->
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcpkix-jdk15on</artifactId>
			<version>1.50</version>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>

		<!-- Completely optional and only needed for OCSP stapling to construct and parse OCSP requests and responses. -->
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>1.54</version>
			<scope>compile</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jzlib</artifactId>
			<version>1.1.3</version>
		</dependency>

		<!-- Java concurrency tools for the JVM -->
		<dependency>
			<groupId>org.jctools</groupId>
			<artifactId>jctools-core</artifactId>
			<version>2.1.1</version>
		</dependency>

		<dependency>
			<groupId>org.rxtx</groupId>
			<artifactId>rxtx</artifactId>
			<version>2.1.7</version>
		</dependency>

		<dependency>
			<groupId>com.barchart.udt</groupId>
			<artifactId>barchart-udt-bundle</artifactId>
			<version>2.3.0</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j2.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<exclusions>
				<exclusion>
					<artifactId>mail</artifactId>
					<groupId>javax.mail</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jms</artifactId>
					<groupId>javax.jms</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jmxtools</artifactId>
					<groupId>com.sun.jdmk</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jmxri</artifactId>
					<groupId>com.sun.jmx</groupId>
				</exclusion>
			</exclusions>
			<optional>true</optional>
		</dependency>

		<!-- Metrics providers -->
		<dependency>
			<groupId>com.yammer.metrics</groupId>
			<artifactId>metrics-core</artifactId>
			<version>2.2.0</version>
		</dependency>

		<!-- Common test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.conscrypt</groupId>
			<artifactId>conscrypt-openjdk-uber</artifactId>
			<version>1.0.0.RC13</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.7.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.13</version>
			<scope>test</scope>
		</dependency>

		<!-- Test dependencies for jboss marshalling encoder/decoder -->
		<dependency>
			<groupId>org.jboss.marshalling</groupId>
			<artifactId>jboss-marshalling-serial</artifactId>
			<version>${jboss.marshalling.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.marshalling</groupId>
			<artifactId>jboss-marshalling-river</artifactId>
			<version>${jboss.marshalling.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Test dependencies for microbench -->
		<dependency>
			<groupId>com.google.caliper</groupId>
			<artifactId>caliper</artifactId>
			<version>0.5-rc1</version>
			<scope>test</scope>
		</dependency>

		<!-- Test suite dependency for generating a compressed heap dump file -->
		<dependency>
			<groupId>org.tukaani</groupId>
			<artifactId>xz</artifactId>
			<version>1.5</version>
		</dependency>

		<!-- Test dependency for log4j2 tests -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j2.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>

